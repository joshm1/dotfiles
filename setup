#!/bin/zsh -e

source ./utils.sh

git submodule update --init

# macOS config
defaults write com.apple.finder AppleShowAllFiles YES.

# link dotfiles
[ -d $DOTFILES ] || symlink $HOME/projects/joshm1/dotfiles $DOTFILES

symlink $DOTFILES/git/gitconfig $HOME/.gitconfig
symlink $DOTFILES/git/gitignore $HOME/.gitignore

symlink $DOTFILES/ruby/gemrc $HOME/.gemrc

mkdir -p $HOME/.config
symlink $DOTFILES/nvim $HOME/.config/nvim
symlink $DOTFILES/nvim $HOME/.nvim
symlink $DOTFILES/nvim/init.vim $HOME/.nvimrc
symlink $DOTFILES/vimrc $HOME/.vimrc

# homebrew
if ! type brew >/dev/null 2>&1; then
  echo "Installing homebrew..."
  # install homebrew
  /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
else
  echo "Homebrew is already installed."
fi

symlink $DOTFILES/homebrew/Brewfile $HOME/Brewfile
bundle_installed_file=$DOTFILES/homebrew/.installed
if [[ ! -f $bundle_installed_file ]]; then
  echo "Running brew bundle..."
  brew tap homebrew/bundle
  for brewfile in $(ls $DOTFILES/homebrew); do
    brew bundle --file=$HOME/$brewfile
  done
  echo $(date) >> $bundle_installed_file
else
  echo "Homebrew bundle has already been run. Delete $bundle_installed_file to run again"
fi

# set zsh as default shell
if  ! grep /usr/local/bin/zsh /etc/shells >/dev/null; then
  echo "Setting zsh as default shell..."
  sudo sh -c "echo $(which zsh) >> /etc/shells"
  chsh -s $(which zsh)
else
  echo "zsh is already the default shell."
fi

source ./setup-ruby
source ./setup-python
source ./setup-nodejs

# fzf: install useful keybindings and fuzzy completion
[[ ! -f ~/.fzf.zsh ]] && /usr/local/opt/fzf/install

# private config files should be in Dropbox
source ./setup-dropbox

source ./setup-postgres

# clone oh-my-zsh - do not run installer because our .zshrc already has includes the oh-my-zsh config
[[ ! -d ~/.oh-my-zsh ]] && \
  git clone https://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh
