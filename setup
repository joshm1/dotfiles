#!/bin/zsh -e

source ./utils.sh

git submodule update --init

# macOS config
defaults write com.apple.finder AppleShowAllFiles YES.

# link dotfiles
[ -d $DOTFILES ] || symlink $HOME/projects/joshm1/dotfiles $DOTFILES

symlink $DOTFILES/git/gitconfig $HOME/.gitconfig
symlink $DOTFILES/git/gitignore $HOME/.gitignore

symlink $DOTFILES/ruby/gemrc $HOME/.gemrc

mkdir -p $HOME/.config
symlink $DOTFILES/nvim $HOME/.config/nvim
symlink $DOTFILES/nvim $HOME/.nvim
symlink $DOTFILES/nvim/init.vim $HOME/.nvimrc
symlink $DOTFILES/vimrc $HOME/.vimrc

symlink $DOTFILES/zsh/.zshrc $HOME/.zshrc

# homebrew
if ! type brew >/dev/null 2>&1; then
  # install homebrew
  /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
fi

symlink $DOTFILES/homebrew/Brewfile $HOME/Brewfile
if [[ ! -f $DOTFILES/homebrew/.installed ]]; then
  brew tap homebrew/bundle
  brew bundle --file=$HOME/Brewfile
  echo $(date) >> $DOTFILES/homebrew/.installed
fi

# set zsh as default shell
if  ! grep /usr/local/bin/zsh /etc/shells >/dev/null; then
  sudo sh -c "echo $(which zsh) >> /etc/shells"
  chsh -s $(which zsh)
fi

# rbenv: set global ruby version to 2.4.2 and install neovim gem
if ! rbenv versions | grep 2.4.2 >/dev/null; then
  rbenv install 2.4.2
  rbenv global 2.4.2
  gem install bundler neovim hub
fi

# python3 (environment variables from https://github.com/pyenv/pyenv/wiki/Common-build-problems#error-the-python-ssl-extension-was-not-compiled-missing-the-openssl-lib)
if ! pyenv versions | grep 2.7 >/dev/null; then
  CFLAGS="-I$(brew --prefix openssl)/include" LDFLAGS="-L$(brew --prefix openssl)/lib" pyenv install 2.7
fi
if ! pyenv versions | grep 3.6.0 >/dev/null; then
  CFLAGS="-I$(brew --prefix openssl)/include" LDFLAGS="-L$(brew --prefix openssl)/lib" pyenv install 3.6.0
fi

eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

# setup python environments for neovim
if [ ! -d ~/.pyenv/versions/neovim2 ]; then
  pyenv virtualenv 2.7 neovim2
  pyenv activate neovim2
  pip install neovim
fi

if [ ! -d ~/.pyenv/versions/neovim3 ]; then
  pyenv virtualenv 3.6.0 neovim3
  pyenv activate neovim3
  pip install neovim
  pip install flake8
  symlink `pyenv which flake8` ~/bin/flake8
fi

# fzf: install useful keybindings and fuzzy completion
[[ ! -f ~/.fzf.zsh ]] && /usr/local/opt/fzf/install

# nvmrc
[ ! -d ~/.nvm ] && curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.0/install.sh | bash

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" # This loads nvm

nvm install lts/carbon
nvm alias default lts/carbon

# private config files should be in Dropbox
setup_dropbox_file="$DOTFILES/setup-dropbox"
if [ -f $setup_dropbox_file ]; then
  source $setup_dropbox_file
fi

if psql -U postgres postgres -c 'SELECT 1;' >/dev/null 2>&1; then
  echo "postgres ROLE already exists"
else
  createuser --superuser --createrole --login --no-password postgres
fi

# clone oh-my-zsh - do not run installer because our .zshrc already has includes the oh-my-zsh config
[[ ! -d ~/.oh-my-zsh ]] && \
  git clone https://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh
